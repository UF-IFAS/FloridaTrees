<rules moduleSOID="TREES Spreadcheck rules rule">
<rule SOID="spreadcheck-10-un">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="10"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="parenthesis">
    <argument>
      <mathtemplate type="or">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="10"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 10"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-15-25">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="15"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 15"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-15-35">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="15"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 15"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-15-6">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="15"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="6"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="10"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="15"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-15-un">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="15"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="parenthesis">
    <argument>
      <mathtemplate type="or">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="15"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 15"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-25-15">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="25"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-25-35">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="25"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 25"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-25-6">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="25"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="6"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="15"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="10"/>
          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-35-15">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="35"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-35-25">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="35"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-35-6">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="35"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="6"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="25"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="and">
          <argument1>
                  <mathtemplate type="equal">
            <argument1>
          <fact SOID="spread"/>
            </argument1>
            <argument2>
          <factvalue type="integer" value="15"/>
            </argument2>
          </mathtemplate>

          </argument1>
          <argument2>
                  <mathtemplate type="equal">
            <argument1>
          <fact SOID="spread"/>
            </argument1>
            <argument2>
          <factvalue type="integer" value="10"/>
            </argument2>
          </mathtemplate>

          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-35-un">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="35"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="parenthesis">
    <argument>
      <mathtemplate type="or">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 35"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-6-10">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="6"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 6"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-6-25">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="6"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="15"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="10"/>
          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 6"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-6-35">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="6"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="25"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="and">
          <argument1>
                  <mathtemplate type="equal">
            <argument1>
          <fact SOID="spread"/>
            </argument1>
            <argument2>
          <factvalue type="integer" value="15"/>
            </argument2>
          </mathtemplate>

          </argument1>
          <argument2>
                  <mathtemplate type="equal">
            <argument1>
          <fact SOID="spread"/>
            </argument1>
            <argument2>
          <factvalue type="integer" value="10"/>
            </argument2>
          </mathtemplate>

          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
<assert fact="maxspread 6"/>
</actions>
</rule>

<rule SOID="spreadcheck-6-un">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="6"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="parenthesis">
    <argument>
      <mathtemplate type="or">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="6"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 6"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-10-25">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="10"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="25"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="15"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 10"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-10-35">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="10"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="35"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="25"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="15"/>
          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 10"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-10-6">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="10"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="6"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 10"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-15-10">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="15"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-25-10">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="25"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="15"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-35-10">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="35"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="10"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="35"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="and">
        <argument1>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="25"/>
          </argument2>
        </mathtemplate>

        </argument1>
        <argument2>
              <mathtemplate type="equal">
          <argument1>
        <fact SOID="spread"/>
          </argument1>
          <argument2>
        <factvalue type="integer" value="15"/>
          </argument2>
        </mathtemplate>

        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-6-15">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="6"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="and">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="15"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="spread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="10"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 6"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-25-un">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="25"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="parenthesis">
    <argument>
      <mathtemplate type="or">
      <argument1>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument1>
      <argument2>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="maxspread"/>
        </argument1>
        <argument2>
      <factvalue type="integer" value="25"/>
        </argument2>
      </mathtemplate>

      </argument2>
    </mathtemplate>

    </argument>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 25"/>
<assert fact="checkpath "/>
</actions>
</rule>

<rule SOID="spreadcheck-10-15">
<ruledefinition definition=""/>
<condition>
<mathtemplate type="and">
  <argument1>
  <mathtemplate type="equal">
    <argument1>
  <fact SOID="spreadcheck"/>
    </argument1>
    <argument2>
  <factvalue type="integer" value="10"/>
    </argument2>
  </mathtemplate>

  </argument1>
  <argument2>
  <mathtemplate type="and">
    <argument1>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="maxspread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument1>
    <argument2>
      <mathtemplate type="equal">
      <argument1>
    <fact SOID="spread"/>
      </argument1>
      <argument2>
    <factvalue type="integer" value="15"/>
      </argument2>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument2>
</mathtemplate>

</condition>
<actions>
<assert fact="maxspread 10"/>
<assert fact="checkpath "/>
</actions>
</rule>

</rules>
