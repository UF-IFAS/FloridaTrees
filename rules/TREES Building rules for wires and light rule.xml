<rules moduleSOID="TREES Building rules for wires and light rule">
<rule SOID="Check for wires">
<ruledefinition definition="If wires are present, show a message about the possible shift in the planting site because of moving the tree and ask a question about the distance of wires from the trees at the planting site"/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="building-away"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="wires"/>
        </argument1>
        <argument2>
      <factvalue type="boolean" value="true"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<retract fact="building-away "/>
<message soid="TREES MS WIRESAGAIN"/>
<question soid="TREES wiresagain"/>
<halt/>
</actions>
</rule>

<rule SOID="Lights not present">
<ruledefinition definition="If no lights are present, ask if the planting site is close to streams, lakes, etc."/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="wires-yes-ok-check-lights"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="lights"/>
        </argument1>
        <argument2>
      <factvalue type="boolean" value="false"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<question soid="TREES question 14"/>
<halt/>
</actions>
</rule>

<rule SOID="Lights present">
<ruledefinition definition="If overhead street lights, aesthetic lights, etc are present, ask about the distance of the trees from the lights, at the planting site"/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="wires-yes-ok-check-lights"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="lights"/>
        </argument1>
        <argument2>
      <factvalue type="boolean" value="true"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<message soid="TREES MS LIGHTS AGAIN"/>
<question soid="TREES lights again"/>
<halt/>
</actions>
</rule>

<rule SOID="Check for lights - 2">
<ruledefinition definition="If there are no lights in the vicinity, ask if the planting site is close to a stream, lake, pond, storm water retension area."/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="building-away"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="lights"/>
        </argument1>
        <argument2>
      <factvalue type="boolean" value="false"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<question soid="TREES question 14"/>
<halt/>
</actions>
</rule>

<rule SOID="Check for lights - 1">
<ruledefinition definition="If lights are present, show a message about a previous choice indicated by the user and ask a question about the distance of the lights from the planting site."/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="building-away"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="lights"/>
        </argument1>
        <argument2>
      <factvalue type="boolean" value="true"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<message soid="TREES MS LIGHTS AGAIN"/>
<question soid="TREES lights again"/>
<halt/>
</actions>
</rule>

</rules>
