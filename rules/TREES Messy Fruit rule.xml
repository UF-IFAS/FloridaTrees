<rules moduleSOID="TREES Messy Fruit rule">
<rule SOID="Messy trees restriction">
<ruledefinition definition="If messy trees exist and fruit characteristics are not known, then show a message about messy trees and ask if the user if messy trees need to be excluded for the list of trees."/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="messy"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="frcar"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=UN}"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<message soid="TREES MS MESS"/>
<question soid="TREES question 1"/>
</actions>
</rule>

<rule SOID="Fruit litter not a problem">
<ruledefinition definition="If messy trees exist but fruits do not cause a litter problem, show a message about the nuisance of having trees with drooping branches and ask the user if trees with drooping branches could be excluded from the list of trees."/>
<condition>
<mathtemplate type="parenthesis">
  <argument>
  <mathtemplate type="and">
    <argument1>
  <fact SOID="messy"/>
    </argument1>
    <argument2>
      <mathtemplate type="parenthesis">
      <argument>
          <mathtemplate type="equal">
        <argument1>
      <fact SOID="frcar"/>
        </argument1>
        <argument2>
      <factvalue type="string" value="{1=NL}"/>
        </argument2>
      </mathtemplate>

      </argument>
    </mathtemplate>

    </argument2>
  </mathtemplate>

  </argument>
</mathtemplate>

</condition>
<actions>
<message soid="TREES MS DROOP"/>
<question soid="TREES question 2"/>
</actions>
</rule>

</rules>
